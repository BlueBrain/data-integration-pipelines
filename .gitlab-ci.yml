image: python:3.8

variables:
  REALLY_UPDATE:
    value: "no"
    description: "When running pipelines that can push data into Nexus, whether the pipeline is ran just for reports or also for updates of data - Valid values: yes, no"
  LIMIT:
    value: "10000"
    description: "When querying, max number of results to get (useful for testing) - Valid values: an integer"
  STAGING:
    value: "yes"
    description: "Whether to push in staging or push in production (notes: 1. This is only relevant if REALLY_UPDATE = yes 2. Querying only happens in production) - Valid values: yes, no"
  CURATED:
    value: "both"
    description: "Whether only curated data is selected or all - Valid values: both, yes"
  MORPHOLOGY_TAG:
    value: "-"
    description: "Tag of the morphology Resources to require"
  CHANGED_SCHEMAS_FILEPATH:
    value: "./data/test_data/schema_validation/bmo_changed_schemas.json"
    description: "Location of the list of schemas to be validated (that probably changed recently)."
  TYPELIST_FILEPATH:
    value: "./data/test_data/schema_validation/typelist.json"
    description: "Location of list of types. For these types the resources are found and it is checked that they are constrained by the correct schema"
  FORGE_VALIDATION:
    value: "yes"
    description: "Whether to use forge.validate or delta trial endpoint, or both. - Valid values: yes, no, both."
  DEFAULT_ANNOTATION:
    value: "yes"
    description: "Whether to use the parcellation volume from the BBP atlas or a different one (Allen CCFv3 2017). - Valid values: yes, no."

  KUBERNETES_MEMORY_LIMIT: 8Gi
  KUBERNETES_MEMORY_REQUEST: 8Gi
  KUBERNETES_CPU_LIMIT: 3
  KUBERNETES_CPU_REQUEST: 3

before_script:
  - export GITLAB_TOKEN=$CI_JOB_TOKEN
  - export GITLAB_USERNAME='gitlab-ci-token'
  - python -m venv venv
  - source venv/bin/activate
  - pip install .[dev]

stages:
  - lint
  - test

# linting:
#  stage: lint
#  script: flake8 src/schemas

check_morphologies_schema:
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model

  script:
  - echo CURATED ${CURATED}
  - > 
    python src/neuron_morphology/validation/check_schema.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED
  artifacts:
    paths:
      - "$OUTPUT_DIR"

quality_measurement_annotations:
  timeout: 5h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model
  script:
  - echo REALLY_UPDATE ${REALLY_UPDATE} LIMIT ${LIMIT} STAGING ${STAGING} CURATED ${CURATED} MORPHOLOGY_TAG ${MORPHOLOGY_TAG} DEFAULT_ANNOTATION ${DEFAULT_ANNOTATION}
  - > 
    python src/neuron_morphology/validation/quality_metric_resource.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED --morphology_tag $MORPHOLOGY_TAG
    --really_update $REALLY_UPDATE --limit $LIMIT --push_to_staging $STAGING --default_annotation $DEFAULT_ANNOTATION
  artifacts:
    paths:
      - "$OUTPUT_DIR"

feature_annotations:
  timeout: 10h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model
  script:
  - echo REALLY_UPDATE ${REALLY_UPDATE} LIMIT ${LIMIT} STAGING ${STAGING} CURATED ${CURATED}
  - > 
    python src/neuron_morphology/feature_annotations/create_update_annotations.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED
    --really_update $REALLY_UPDATE --limit $LIMIT --push_to_staging $STAGING
  artifacts:
    paths:
      - "$OUTPUT_DIR"


search_index_discrepancy:
  timeout: 6h 00m
  rules:
    - when: manual
  parallel:
    matrix:
      - DATA_TYPE: RECONSTRUCTED_NEURON_MORPHOLOGY
      - DATA_TYPE: EXPERIMENTAL_TRACE
      - DATA_TYPE: EXPERIMENTAL_NEURON_DENSITY
      - DATA_TYPE: EXPERIMENTAL_BOUTON_DENSITY
      - DATA_TYPE: EXPERIMENTAL_SYNAPSE_PER_CONNECTION
      - DATA_TYPE: E_MODEL
  script:
  - python src/search_index/search_index_discrepancy.py --username $AWS_USERNAME --password $AWS_PASSWORD --data_type $DATA_TYPE


emodel_validation:
  timeout: 6h 00m
  variables:
    OUTPUT_DIR: "./output/e_model"
  rules:
    - when: manual
  script:
  - python src/e_model/expected_fields.py --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --is_aws no
  artifacts:
    paths:
      - "$OUTPUT_DIR"


morphology_registration:
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  script:
  - > 
    python src/neuron_morphology/morphology_registration.py --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR
  artifacts:
    paths:
      - "$OUTPUT_DIR"


check_update_curated:
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model

  script:
  - > 
    python src/neuron_morphology/validation/check_update_curated.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED
  artifacts:
    paths:
      - "$OUTPUT_DIR"


brain_region:
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
  script:
  - echo CURATED ${CURATED}
  - > 
    python src/neuron_morphology/validation/region_comparison.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED --limit $LIMIT
  timeout: 2h 30m
  artifacts:
    paths:
      - "$OUTPUT_DIR"

check_links:
  timeout: 5h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model
  script:
  - echo CURATED ${CURATED}
  - > 
    python src/neuron_morphology/validation/check_links.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET --curated $CURATED
  artifacts:
    paths:
      - "$OUTPUT_DIR"


check_schema_validation:
  timeout: 8h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$BUCKET/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: bbp/mmb-point-neuron-framework-model
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight

  script:
  - > 
    python src/schemas/check_schema_validation.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET
  artifacts:
    paths:
      - "$OUTPUT_DIR"
    when: always

check_changed_schemas:
  timeout: 8h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$BUCKET/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: public/ephys
      - BUCKET: public/ngv
      - BUCKET: public/ngv-anatomy
      - BUCKET: public/topological-sampling
      - BUCKET: public/multi-vesicular-release
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight
      - BUCKET: bbp/lnmce

  script:
  - echo CHANGED_SCHEMAS_FILEPATH ${CHANGED_SCHEMAS_FILEPATH}
  - echo FORGE_VALIDATION ${FORGE_VALIDATION}
  - > 
    python src/schemas/check_changed_schemas.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET
    --changed_schemas_filepath $CHANGED_SCHEMAS_FILEPATH --forge_validation $FORGE_VALIDATION
  artifacts:
    paths:
      - "$OUTPUT_DIR"
    when: always

constraint_mismatch:
  timeout: 8h 00m
  rules:
    - when: manual
  variables:
    OUTPUT_DIR: "./output/$BUCKET/$CI_COMMIT_TIMESTAMP"
  parallel:
    matrix:
      - BUCKET: public/sscx
      - BUCKET: public/thalamus
      - BUCKET: public/hippocampus
      - BUCKET: public/morphologies
      - BUCKET: bbp/mmb-point-neuron-framework-model
      - BUCKET: bbp-external/seu
      - BUCKET: bbp/mouselight

  script:
  - echo TYPELIST_FILEPATH ${TYPELIST_FILEPATH}
  - > 
    python src/schemas/constraint_mismatch.py 
    --username $SA_USERNAME --password $SA_PASSWORD --output_dir $OUTPUT_DIR --bucket $BUCKET
    --typelist_filepath $TYPELIST_FILEPATH
    --chunk_size 200
  artifacts:
    paths:
      - "$OUTPUT_DIR"
    when: always
